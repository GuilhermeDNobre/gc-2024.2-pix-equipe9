name: Continuous Integration

on:
  push:
    branches:
      - staging
      - develop
  pull_request:
    branches:
      - main

jobs:
  CI-Pipeline:
    runs-on: ubuntu-latest
    env:
      JWT_SECRET: qwe123
      SPRING_PROFILES_ACTIVE: prod

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Start Docker Compose
        run: docker-compose up --build -d  # Rodar em segundo plano para não bloquear

      - name: Wait for application to be ready
        run: |
          sleep 10  # Atraso adicional para garantir que a aplicação esteja completamente inicializada
          for i in {1..60}; do
            response=$(docker exec pix-api curl -s http://localhost:8080/actuator/health)
            if echo "$response" | jq -e '.status == "UP"' > /dev/null; then
              echo "Application is ready!"
              exit 0
            fi
            echo "Waiting for application to be ready..."
            sleep 5  # Aguarda mais 5 segundos antes de tentar novamente
          done
          echo "Application failed to start in time"
          exit 1

      - name: Check database connectivity
        run: |
          docker exec pix-api curl -s postgres-pix-db:5432 > /dev/null && echo "Database is reachable" || echo "Database not reachable"

      - name: Check Docker logs
        run: docker-compose logs --tail=100  # Limita a saída para os últimos 100 logs para não ficar excessivo

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down
